config 'dnsdist' 'general'
  option 'enabled' '0'
  # Number of entries in the domain cache
  option 'domain_cache_size' '100'
  # Cap the TTL of cached records to the supplied number of seconds. Default is 600 (10 minutes), minimum is 1, useful range is up to 86400.
  # Setting this value to the highest possible value for a TTL, 2^32-1, means that TTLs will not be capped.
  option 'domain_ttl_cap' '600'
  # Set how often the cache is scanned to expunge expired entries, in seconds. Default is 60s (every minute), minimum value is 0, useful range is up to 86400
  option 'domain_cleanup_interval' '60'
  # The TTL used for local domain responses. The values allowed by the DNS protocol range from 1 to 2^31-1
  option 'local_domains_ttl' '1'
  # The DNS suffix, or list of suffixes, identifying local domain names
  option 'local_domains_suffix' 'lan'
  # The TTL used for sentinel domains responses
  option 'sentinel_domains_ttl' '60'
  # Number of concurrent connections per client device. 0 means unlimited, the maximum value is 2^64-1.
  option 'concurrent_incoming_connections_per_device' '10'
  # The DNS engine will consider to accept queries on interfaces whose names match this pattern,
  # or list of patterns. When a list of patterns is provided, interfaces matching any pattern will
  # be considered. If this value is left empty, the DNS engine will consider all interfaces.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # The default is the 'br' pattern as OpenWrt defaults to one bridge for local interfaces.
  option 'network_interface_include' 'br'
  # The DNS engine will NOT consider to accept queries on interfaces whose names match this pattern
  # or list of patterns. When a list of patterns is provided, interfaces matching any pattern will
  # not be considered. If this value is left empty, no interface will be excluded.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # The default is to exclude interfaces matching the 'wan' and 'eth0.2' patterns,
  # as by default on most routers the wan interface is the second VLAN on the single network interface (eth0),
  # but it is sometimes named 'wan' on container hosts.
  option 'network_interface_exclude' 'wan eth0.2'
  # Pattern or list of patterns identifying WAN interfaces. If 'configuration_check_interval' is
  # set, only changes to the interfaces matching these patterns, plus the ones matching
  # 'network_interface_include' but not 'network_interface_exclude', will be considered
  # configuration changes. When a list of patterns is provided, matching any pattern is
  # enough to be considered. If this value is left empty, only the interfaces matching
  # 'network_interface_include' but not 'network_interface_exclude' will be considered.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  # Refer to 'network_interface_exclude' for the default value.
  option 'network_interface_wan_include' 'wan'
  # Port on which to accept Do53 queries on (UDP and TCP)
  option 'do53_port' '53'
  # Port on which to accept DoT queries on
  option 'dot_port' '853'
  # Port on which to accept DoH queries on
  option 'doh_port' '443'
  # Interval between health-check queries to an upstream resolver, in seconds
  option 'default_check_interval' '5'
  # Health check timeout to an upstream resolver, in milliseconds
  option 'default_check_timeout' '1000'
  # Number of failed consecutive health-checks to mark an upstream resolver down
  option 'default_max_check_failures' '2'
  # Whether upstream resolvers learned via the system should be checked for DoT/DoH support
  option 'auto_upgrade_discovered_backends' '1'
  # Whether the Do53 version of auto-upgraded resolver should be kept as fallback
  option 'keep_auto_upgraded_backends' '1'
  # In which internal pool should upgraded resolver be placed. The pool will be created
  # if it does not exist. If this value is left empty upgraded resolvers are placed into
  # the 'upgraded-to-dox' pool
  option 'auto_upgraded_backends_pool' 'upgraded-to-dox'
  # How often should the configuration be checked for changes, in seconds. 0 means disabled
  option 'configuration_check_interval' '60'
  # Domain name for DoT / DoH advertisement, if any. The default is to advertise only for the opportunistic '_dns.resolver.arpa.' name.
  option 'advertise_for_domain_name' ''
  # User to switch to, after the configuration has been set up. Default is to run as user 'root'
  option 'user' 'root'
  # Group to switch to, after the configuration has been set up. Default is to run as group 'root'
  option 'group' 'root'
  # Whether to enable 'verbose' logging ('1') or not ('0')
  option 'verbose_mode' '0'
  # Log verbose-level messages to this file instead of syslog and stdout (the default)
  option 'verbose_log_destination' ''
  # Maximum number of TCP connections to an upstream resolver. 0 means no limit
  option 'default_max_upstream_concurrent_tcp_connections' '0'
  # Maximum number of cached idle TCP connections to an upstream resolver. Keeping more connections improves latency but uses memory and increases the load on the upstream resolver
  option 'max_idle_tcp_connections_per_downstream' '2'
  # Maximum number of cached idle DoH connections to an upstream resolver. Keeping more connections improves latency but uses memory and increases the load on the upstream resolver
  option 'max_idle_doh_connections_per_downstream' '2'
  # Number of outgoing UDP sockets to an upstream resolver. Higher values reduce the risk of a successful UDP spoofing attempt, but increase the memory usage. The minimum value is 1, and a sane maximum value is 32767, as higher values might require too many sockets. The default is 100
  option 'outgoing_udp_sockets_per_downstream' '100'
  # Maximum number of resolvers that can be used at the same time, either from the configuration
  # or learned via the system. Additional resolvers, if any, will be skipped.
  # Minimum value is 0, maximum is 100, default is 5.
  option 'max_upstream_resolvers' '5'
  # The maximum size of the sample of queries to record and consider for the
  # health-checking mechanism. Higher values use slightly more memory.
  # Minimum is 1, maximum is 10000, default is 100.
  option 'health_checks_sample_size' '100'
  # The minimum amount of regular queries that should have been recorded before the
  # health-check threshold can be applied. Minimum is 1, maximum is equal to 'health_checks_sample_size',
  # default is 10.
  option 'health_checks_min_sample_count' '10'
  # The threshold, as a percentage, of queries that should fail for the health-check
  # to be triggered. The default is 20 which means 20% of the last 'health_checks_sample_size' queries
  # should fail for a health-check to be triggered. Minimum is 1, maximum is 100.
  option 'health_checks_threshold' '20'
  # The interval, in seconds, between health-check queries. Note that when 'health_checks_exponential_backoff' is set to 1,
  # the interval doubles between every queries. These queries are only sent when a threshold of failing regular queries has
  # been reached, and until the backend is available again. Minimum is 1, maximum is 86400, default is 30 seconds.
  option 'health_checks_failed_interval' '30'
  # This setting controls which responses are considered a failure: 'TimeoutOnly' means that only timeout and I/O errors of
  # regular queries will be considered for the health-check threshold, while 'TimeoutOrServFail' will also consider 'Server Failure'
  # answers. Default is 'TimeoutOrServFail'.
  option 'health_checks_mode' 'TimeoutOrServFail'
  # Whether the health-check should use an exponential back-off instead of a fixed value, between health-check probes. If set to '0',
  # after a backend has been moved to the 'down' state health-check probes are sent every 'health_checks_failed_interval' seconds.
  # When set to '1', the delay between each probe starts at 'health_checks_failed_interval' seconds and doubles between every probe,
  # capped at 'health_checks_max_backoff' seconds. Default is '1'.
  option 'health_checks_exponential_backoff' '1'
  # This value, in seconds, caps the time between two health-check queries when 'health_checks_exponential_backoff' is set to '1'.
  # The default is 3600 which means that at most one hour will pass between two health-check queries. Minimum is 1, maximum is 86400.
  option 'health_checks_max_backoff' '3600'
  # The maximum PSS ("proportional set size") value acceptable for the dnsdist process, in kilobytes. The current PSS will be retrieved every 'configuration_check_interval' seconds and, if the specified threshold has been reached, the process will automatically restart to prevent consuming too much memory. The default is 0 which means that this check is disabled.
  option 'max_pss' '0'

# sentinel domains
config domainlist sentinel_domains
  # Exact matching of the name will be done unless it starts with '*.' in which case suffix matching will be done
  # IPv4 addresses configured on the configured interface will be returned to A queries, IPv6 to AAAA queries.
  # The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
  # not the ones from the netifd configuration, also called 'logical' interface names.
  list entry 'router br-lan'
  list entry '*.router br-lan'

# configuration for a given network interfaces.
# The configuration of the special name 'default_interface' will be applied
# to all interfaces that do not have a specific configuration entry, provided
# that they match 'network_interface_include' and do not match 'network_interface_exclude'.
# The interface names used are the device names as seen by the kernel, 'physical' and 'virtual' interface names,
# not the ones from the netifd configuration, also called 'logical' interface names.
config interface
  option name 'default_interface'
  # Whether dnsdist will listen on this interface
  option enabled 1
  # Whether dnsdist will accept Do53 queries, UDP and TCP, on this interface
  option do53 1
  # Whether dnsdist will accept DoT queries on this interface
  option dot 0
  # Whether dnsdist will accept DoH queries on this interface
  option doh 0
  # Whether local domain resolution will be enabled for queries received on this interface
  option local_resolution 1
  # Whether sentinel domain resolution will be enabled for queries received on this interface
  option sentinel_domains 'sentinel_domains'
  # Whether dnsdist will advertise DoT and/or DoH support, if available, in response to DDR queries received on this interface
  option advertise 1
